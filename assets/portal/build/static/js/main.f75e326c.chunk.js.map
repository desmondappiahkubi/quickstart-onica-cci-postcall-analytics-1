{"version":3,"sources":["dto/auth.dto.ts","service/api.service.ts","store/actions/auth.actions.ts","service/auth.service.ts","store/reducers/auth.reducer.ts","store/actions/transcripts.actions.ts","store/reducers/transcripts.reducer.ts","store/actions/sentiment.action.ts","store/reducers/sentiment.reducer.ts","store/reducer.ts","theme/colors.js","theme/material.theme.js","common/logger.js","history.js","auth/CognitoAuth.js","auth/AuthRoles.js","common/requiresAuth.js","navigation/NavigationBar.js","calls/CallCard.js","calls/Calls.js","theme/global.styles.js","upload/Upload.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["AuthDto","auth","idToken","accessToken","refreshToken","this","HttpMethod","ApiService","baseUrl","process","next","request","getAuth","header","console","log","Auth","currentSession","then","session","getIdToken","getJwtToken","getAccessToken","getRefreshToken","getToken","method","uri","body","Promise","resolve","_post","_get","_patch","options","headers","_getHeader","json","rp","qs","authService","apiService","signOut","AuthActionKey","AuthAction","user","dispatch","payload","getSignInUserSession","decodePayload","authenticated","type","value","isAuthenticated","loginResults","email","roles","logout","initialState","loading","loginError","changePassword","reducer","state","action","result","error","_error","name","TranscriptsActionKey","TranscriptsAction","lastKey","encodeURIComponent","JSON","stringify","token","fetch","Authorization","redirect","referrerPolicy","response","catch","err","data","lastEvaluatedKey","audio","labels","SentimentActionKey","SentimentAction","sentimentURI","parse","rootReducer","combineReducers","authReducer","transcripts","transcriptsReducer","sentiment","sentimentReducer","themeColors","mediumGray","primary","turquoise","navBar","materialTheme","createMuiTheme","spacing","typography","fontFamily","join","colors","palette","main","secondary","boxShadow","high","medium","low","overrides","MuiTableCell","stickyHeader","backgroundColor","head","color","MuiTableSortLabel","active","icon","infoCaption","fontSize","modal","root","padding","title","margin","paper","width","inputsContainer","marginTop","padTop","logger","store","getState","createBrowserHistory","CognitoAuth","props","Hub","listen","event","history","push","setState","authState","authData","location","search","startsWith","currentAuthenticatedUser","e","federatedSignIn","className","Component","AuthRoles","ADMIN","MANAGER","ComposedComponent","Authenticate","_checkAndRedirect","protectedBy","includes","React","mapStateToProps","mapDispatchToProps","connect","region","split","theme","NavigationBar","handleOnLogout","goToUpload","goToQuickSight","a","thisUrlEncoded","window","hostname","quicksightUrlEncoded","AWS","config","id_token","cognitoParams","IdentityPoolId","Logins","credentials","CognitoIdentityCredentials","refresh","getCredentials","creds","accessKeyId","secretAccessKey","sessionToken","quickSightSSO","SigninToken","goHome","classes","AppBar","position","Toolbar","Grid","container","direction","justify","alignContent","alignItems","item","onClick","clickable","Typography","variant","alt","logo","src","userInfo","role","userRole","userEmail","IconButton","style","paddingLeft","paddingRight","ExitToApp","withStyles","flexGrow","height","grow","marginRight","textAlign","fontWeight","paddingTop","cursor","useStyles","makeStyles","chips","heading","pxToRem","secondaryHeading","text","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","link","textDecoration","TranscriptLine","turn","xs","Emoji","Sentiment","component","speaker","AGENT","start_time","getSpeaker","hasOwnProperty","channel","speaker_label","CallCard","playing","transcript","audioURI","currentKey","currentSentiment","call_motivation_status","call_resolution_status","callMotivation","callResolution","expanded","showing","fullTranscriptURI","ExpansionPanel","toggleTranscript","analysisURI","onFocus","stopPropagation","ExpansionPanelSummary","expandIcon","aria-controls","id","lastModified","aria-label","togglePlay","playIcon","transcriptionJobName","Divider","ExpansionPanelDetails","paddingBottom","Chip","label","agentOrder","parseInt","turns","numChannels","agentChannel","agentLabel","customerOrder","filter","t","map","getTranscriptTurns","i","key","CircularProgress","currentAudio","Calls","bind","nextPage","getTranscripts","transcriptUri","sentimentUri","getSentiment","Object","keys","length","List","aria-labelledby","ListItem","button","autoPlay","Button","marginLeft","disabled","requiresAuth","styles","body1","h6","minWidth","bullet","display","transform","pos","marginBottom","readFile","file","res","rej","reader","FileReader","onabort","onerror","onloadend","contentType","replace","moment","utc","Date","toISOString","readAsArrayBuffer","status","files","cases","concat","f","path","STAGE","Error","authenticatedUpload","all","jobId","v4","ok","statusText","uris","s","Bucket","Key","find","url","s3Response","Paper","Card","CardContent","gutterBottom","onDrop","accepted","rejected","getRootProps","getInputProps","Container","avatar","Avatar","onDelete","CardActions","size","startIcon","Amplify","configure","REACT_APP_REGION","userPoolId","userPoolWebClientId","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","App","exact","Upload","from","to","globalStyles","Boolean","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f75e326c.chunk.js","sourcesContent":["import {AuthInterface} from \"../interface/auth.interface\";\n\nclass AuthDto {\n\n    idToken: string;\n    accessToken: string;\n    refreshToken: string;\n\n    constructor(auth: AuthInterface) {\n        this.idToken = auth.idToken;\n        this.accessToken = auth.accessToken;\n        this.refreshToken = auth.refreshToken;\n    }\n\n}\n\nexport default AuthDto","import rp from 'request-promise';\nimport {Auth} from 'aws-amplify';\nimport AuthDto from \"../dto/auth.dto\";\nimport {PageInterface} from \"../interface/page.interface\";\nimport {CallInterface} from \"../interface/call.interface\";\nimport {AuthInterface} from \"../interface/auth.interface\";\n\nconst HttpMethod = {\n    POST: \"POST\",\n    GET: \"GET\",\n    PATCH: \"PATCH\"\n};\n\nclass ApiService {\n\n    baseUrl = process.env.REACT_APP_BASE_API;\n\n    getCalls(next: string | null): Promise<PageInterface<CallInterface>> {\n        return this.request(HttpMethod.GET, `${this.baseUrl}/calls`, {\n            next\n        }, this.getAuth());\n    }\n\n    _getHeader(auth: AuthInterface | null): object {\n        let header: any = {\n        };\n        if (auth) {\n            header['Authorization'] = `Bearer ${auth.idToken}`;\n        }\n        console.log(\"The header\", header);\n        return header\n    }\n\n    getAuth(): Promise<AuthInterface | null> {\n        return Auth.currentSession()\n            .then(session => new AuthDto({\n                idToken: session.getIdToken().getJwtToken(),\n                accessToken: session.getAccessToken().getJwtToken(),\n                refreshToken: session.getRefreshToken().getToken()\n            }));\n    }\n\n    request(method: string, uri: string, body: object | null, auth: Promise<AuthInterface | null> = Promise.resolve(null)): Promise<any> {\n\n        if (method === HttpMethod.POST) {\n            return auth.then(auth => this._post(uri, body, auth));\n        } else if (method === HttpMethod.GET) {\n            return auth.then(auth => this._get(uri, body, auth));\n        } else if (method === HttpMethod.PATCH) {\n            return auth.then(auth => this._patch(uri, body, auth));\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    _post(uri: string, body: object | null = {}, auth: AuthInterface | null = null) {\n        let options = {method: HttpMethod.POST, uri, body, headers: this._getHeader(auth), json: true};\n        return rp(options)\n    }\n\n    _get(uri: string, qs: object | null, auth: AuthInterface | null = null) {\n        let options = {method: HttpMethod.GET, uri, qs, headers: this._getHeader(auth), json: true};\n        return rp(options)\n    }\n\n    _patch(uri: string, body: object | null = {}, auth: AuthInterface | null = null) {\n        let options = {method: HttpMethod.PATCH, uri, body, headers: this._getHeader(auth), json: true};\n        return rp(options)\n    }\n\n}\n\nexport {ApiService};","import {ApiService} from \"../../service/api.service\";\nimport history from \"../../history\";\nimport AuthService from \"../../service/auth.service\";\nimport {Dispatch} from \"redux\";\nimport {UserInterface} from \"../../interface/user.interface\";\nimport {CognitoUser} from \"amazon-cognito-identity-js\";\n\nconst apiService = new ApiService();\nconst authService = new AuthService(apiService);\n\nconst AuthActionKey = {\n    LOGIN_PENDING: \"LOGIN_PENDING\",\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    LOGIN_ERROR: \"LOGIN_ERROR\"\n};\n\nconst loginResults = (authenticated: boolean, user: UserInterface) => {\n    return {\n        type: AuthActionKey.LOGIN,\n        value: {\n            isAuthenticated: authenticated,\n            user\n        }\n    }\n};\n\nconst loginErrorResults = (error: any) => {\n    return {\n        type: AuthActionKey.LOGIN_ERROR,\n        value: {\n            error\n        }\n    }\n};\n\nconst logoutResults = () => {\n    return {\n        type: AuthActionKey.LOGOUT\n    }\n};\n\nconst AuthAction = {\n    auth: (user: CognitoUser) => {\n        return (dispatch: Dispatch) => {\n            let payload = user.getSignInUserSession()!.getIdToken().decodePayload();\n            dispatch(loginResults(true, {\n                email: payload['email'],\n                roles: payload['cognito:groups']\n            }));\n        };\n    },\n    logout: () => {\n        return (dispatch: Dispatch) => {\n            authService.logout();\n            // dispatch(logoutResults());\n            // dispatch(loginErrorResults(null));\n            // history.push('/login');\n        }\n    }\n};\n\nexport {AuthActionKey, AuthAction}","import {ApiService} from \"./api.service\";\nimport AuthDto from \"../dto/auth.dto\";\nimport {Auth} from 'aws-amplify';\n\nclass AuthService {\n\n    private apiService: ApiService;\n\n    constructor(apiService: ApiService) {\n        this.apiService = apiService;\n    }\n\n    logout() {\n        Auth.signOut();\n    }\n\n}\n\nexport default AuthService;","import {AuthActionKey} from \"../actions/auth.actions\";\nimport {Reducer} from \"redux\";\n\nconst initialState = {\n    loading: false,\n    loginError: null,\n    isAuthenticated: false,\n\n    // indicate if change password is requested by cognito.\n    changePassword: false,\n    user: {\n        email: \"\",\n        roles: []\n    }\n};\n\nconst reducer: Reducer = (state = initialState, action: any): object => {\n    switch (action.type) {\n        case AuthActionKey.LOGIN_PENDING:\n            return {\n                ...state,\n                loading: action.value\n            };\n        case AuthActionKey.LOGIN_ERROR:\n            let changePassword = state.changePassword || false;\n            let result = action.value.error;\n\n            // once the changePassword is set, we keep it on until the user is successful...\n            if (!changePassword && result) {\n                changePassword = result.error._error.name === \"NewPasswordRequired\";\n            }\n\n            return {\n                ...state,\n                changePassword: changePassword,\n                loginError: result\n            };\n        case AuthActionKey.LOGIN:\n            return {\n                ...state,\n                isAuthenticated: true,\n                changePassword: false,\n                user: action.value.user\n            };\n        case AuthActionKey.LOGOUT:\n            return {\n                ...state,\n                changePassword: false,\n                isAuthenticated: false,\n                user: null\n            };\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default reducer;","import {Dispatch} from \"redux\"\nimport {ApiService} from \"../../service/api.service\"\nconst apiService = new ApiService()\n\nconst TranscriptsActionKey = {\n    GET_TRANSCRIPTS_PENDING: \"GET_TRANSCRIPTS_PENDING\",\n    GET_TRANSCRIPTS_SUCCESS: \"GET_TRANSCRIPTS_SUCCESS\",\n    GET_TRANSCRIPTS_ERROR: \"GET_TRANSCRIPTS_ERROR\"\n}\n\nconst TranscriptsAction = {\n    getTranscripts: (lastKey: string) => (dispatch: Dispatch) => {\n        let uri = `${process.env.REACT_APP_BASE_API}/api/transcripts`\n        if (lastKey) uri = `${uri}?lastKey=${encodeURIComponent(JSON.stringify(lastKey))}`\n        dispatch({type: TranscriptsActionKey.GET_TRANSCRIPTS_PENDING})\n        apiService.getAuth()\n        .then((token: any) => fetch(uri, {\n            method: 'GET',\n            headers: {\n                Authorization: `${token.accessToken}`\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *client\n        }))\n        .then((response: Response) => response.json())\n        .then((response: any) => dispatch({\n            type: TranscriptsActionKey.GET_TRANSCRIPTS_SUCCESS,\n            payload: response\n        }))\n        .catch((err: Error) => dispatch({\n            type: TranscriptsActionKey.GET_TRANSCRIPTS_ERROR,\n            payload: err\n        }))\n    }\n}\n\nexport {TranscriptsActionKey, TranscriptsAction}","import {TranscriptsActionKey} from \"../actions/transcripts.actions\";\nimport {Reducer} from \"redux\";\n\nconst initialState = {\n    loading: false,\n    error: null,\n    data: [],\n    lastEvaluatedKey: null\n};\n\nconst reducer: Reducer = (state = initialState, action: any): object => {\n    switch (action.type) {\n        case TranscriptsActionKey.GET_TRANSCRIPTS_PENDING:\n            return {\n                ...state,\n                error: null,\n                loading: true\n            };\n        case TranscriptsActionKey.GET_TRANSCRIPTS_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            };\n        case TranscriptsActionKey.GET_TRANSCRIPTS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                data: action.payload.audio,\n                lastEvaluatedKey: action.payload.lastEvaluatedKey,\n                labels: action.payload.labels\n            }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default reducer;","import {Dispatch} from \"redux\"\nimport {ApiService} from \"../../service/api.service\"\nconst apiService = new ApiService()\n\nconst SentimentActionKey = {\n    GET_SENTIMENT_PENDING: \"GET_SENTIMENT_PENDING\",\n    GET_SENTIMENT_SUCCESS: \"GET_SENTIMENT_SUCCESS\",\n    GET_SENTIMENT_ERROR: \"GET_SENTIMENT_ERROR\"\n}\n\nconst SentimentAction = {\n  getSentiment: (sentimentURI: string) => (dispatch: Dispatch) => {\n    const uri = `${process.env.REACT_APP_BASE_API}/api/sentiment?uri=${encodeURIComponent(sentimentURI)}`\n    dispatch({type: SentimentActionKey.GET_SENTIMENT_PENDING})\n    apiService.getAuth()\n    .then((token: any) => fetch(uri, {\n      method: 'GET',\n      headers: {\n          Authorization: `${token.accessToken}`\n      },\n      redirect: 'follow', // manual, *follow, error\n    }))\n    .then((response: Response) => response.json())\n    .then((response: any) => dispatch({\n        type: SentimentActionKey.GET_SENTIMENT_SUCCESS,\n        payload: response\n    }))\n    .catch((err: Error) => dispatch({\n        type: SentimentActionKey.GET_SENTIMENT_ERROR,\n        payload: err\n    }))\n  }\n}\n\nexport {SentimentActionKey, SentimentAction}","import {SentimentActionKey} from \"../actions/sentiment.action\";\nimport {Reducer} from \"redux\";\n\nconst initialState = {\n    loading: false,\n    error: null,\n    data: null,\n    lastEvaluatedKey: null\n};\n\nconst reducer: Reducer = (state = initialState, action: any): object => {\n    switch (action.type) {\n        case SentimentActionKey.GET_SENTIMENT_PENDING:\n            return {\n                ...state,\n                data: null,\n                error: null,\n                loading: true\n            };\n        case SentimentActionKey.GET_SENTIMENT_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            };\n        case SentimentActionKey.GET_SENTIMENT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                data: JSON.parse(action.payload.uri)\n            }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default reducer;","import {combineReducers} from \"redux\";\n\nimport authReducer from './reducers/auth.reducer';\nimport transcriptsReducer from './reducers/transcripts.reducer'\nimport sentimentReducer from './reducers/sentiment.reducer'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    transcripts: transcriptsReducer,\n    sentiment: sentimentReducer\n});\n\nexport default rootReducer;","const themeColors = {\n    mediumGray: \"#757679\",\n    primary: \"#3D4E62\",\n    turquoise: \"#00ABBA\",\n    error: \"#C22402\",\n    navBar: \"#222A33\"\n};\n\nexport default themeColors","import {createMuiTheme} from \"@material-ui/core\";\nimport themeColors from \"./colors\";\n\nconst materialTheme = new createMuiTheme({\n    spacing: 2,\n    typography: {\n        fontFamily: [\"Roboto\",\"Helvetica\",\"Arial\",\"sans-serif\"].join(\",\"),\n    },\n    colors: {\n        mediumGray: themeColors.mediumGray,\n        error: themeColors.error\n    },\n    palette: {\n        primary: {\n            main: themeColors.primary\n        },\n        secondary: {\n            main: themeColors.turquoise\n        },\n        error: {\n            main: themeColors.error\n        }\n    },\n    boxShadow: {\n        high: \"3px 8px 20px -6px rgba(0,0,0,0.35)\",\n        medium: \"2px 6px 10px -4px rgba(0,0,0,0.35)\",\n        low: \"1px 4px 8px -3px rgba(0,0,0,0.35)\"\n    },\n    overrides: {\n        MuiTableCell: {\n            stickyHeader: {\n                backgroundColor: themeColors.primary\n            },\n            head: {\n                color: \"#FFFFFF\"\n            }\n        },\n        MuiTableSortLabel: {\n            active: {\n                color: \"#FFFFFF !important\"\n            },\n            icon: {\n                color: \"#FFFFFF !important\"\n            }\n        }\n    },\n    infoCaption: {\n        color: \"#757575\",\n        fontSize: 12\n    },\n    modal: {\n        root: {\n            padding: 5\n        },\n        title: {\n            fontSize: 25,\n            padding: 0,\n            margin: 0\n        },\n        paper: {\n            padding: 20,\n            width: 300\n        },\n        inputsContainer: {\n            marginTop: 20\n        },\n        padTop: {\n            marginTop: 20\n        },\n        error: {\n            fontSize: 12,\n            color: themeColors.error\n        }\n    }\n});\n\nexport default materialTheme","const logger = (store) => {\n    return next => {\n        return action => {\n            console.log(\"[Middleware] Dispatching\", action);\n            const result = next(action);\n            console.log(\"[Middleware] next state\", store.getState());\n            return result;\n        }\n    }\n};\n\nexport default logger;","import {createBrowserHistory} from 'history';\nexport default createBrowserHistory();","import React, {Component} from 'react';\nimport {Auth, Hub} from 'aws-amplify';\nimport history from \"../history\";\n\nclass CognitoAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    // let the Hub module listen on Auth events\n    Hub.listen('auth', (data) => {\n      switch (data.payload.event) {\n        case 'signIn':\n          history.push('/calls');\n          this.setState({authState: 'signedIn', authData: data.payload.data});\n          break;\n        case 'signIn_failure':\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  componentDidMount() {\n    // we only want to do this if code isn't\n    if (!this.props.location || !this.props.location.search.startsWith(\"?code=\")) {\n      Auth.currentAuthenticatedUser().then(user => {\n        history.push('/calls');\n      }).catch(e => {\n        Auth.federatedSignIn();\n      });\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"App\"/>\n    );\n  }\n}\n\nexport default CognitoAuth;","const AuthRoles = {\n    ADMIN: \"Admin\",\n    MANAGER: \"Manager\"\n};\n\nexport default AuthRoles","import React from 'react';\nimport {connect} from 'react-redux';\nimport history from \"../history\";\nimport AuthRoles from \"../auth/AuthRoles\";\nimport {Auth} from \"aws-amplify\";\nimport {AuthAction} from \"../store/actions/auth.actions\";\n\nexport default function (ComposedComponent, protectedBy=AuthRoles.MANAGER) {\n    class Authenticate extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                authState: 'loading'\n            }\n        }\n\n        componentDidMount() {\n            this._checkAndRedirect();\n        }\n\n        componentDidUpdate() {\n            this._checkAndRedirect();\n        }\n\n        _checkAndRedirect() {\n            if (this.state.authState === \"loading\") {\n                Auth.currentAuthenticatedUser().then(user => {\n                    this.props.auth(user);\n                    this.setState({authState: 'valid'});\n                }).catch(e => {\n                    this.setState({authState: 'invalid'});\n                    this.props.redirect();\n                });\n            }\n        }\n\n        render() {\n            return this.state.authState === 'valid' ? <ComposedComponent {...this.props} /> : <div />;\n        }\n\n        hasRole(protectedBy) {\n            if (this.props.auth.user.roles) {\n                return this.props.auth.user.roles.includes(protectedBy)\n            } else {\n                return false\n            }\n        }\n    }\n\n    const mapStateToProps = (state) => {\n        return {\n            auth: state.auth\n        };\n    };\n\n    const mapDispatchToProps = (dispatch) => {\n        return {\n            redirect: () => dispatch(() => {history.push(\"/login\")}),\n            auth: (user) => dispatch(AuthAction.auth(user))\n        }\n    };\n\n    return connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Authenticate);\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    AppBar,\n    Toolbar,\n    IconButton, Grid,\n    Typography, withStyles, createMuiTheme\n} from \"@material-ui/core\";\nimport {Auth} from 'aws-amplify';\n\nimport {ExitToApp} from '@material-ui/icons';\nimport PropTypes from \"prop-types\";\nimport {AuthAction} from \"../store/actions/auth.actions\";\nimport AuthRoles from \"../auth/AuthRoles\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport themeColors from \"../theme/colors\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport {ApiService} from \"../service/api.service\"\nimport * as AWSGlobal from 'aws-sdk/global';\nimport AWS from 'aws-sdk';\n\n\n\nconst apiService = new ApiService()\nlet region = process.env.REACT_APP_COGNITO_DOMAIN.split('.')[2]\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    logo: {\n        margin: \"5px 10px 0 0\",\n        height: 43\n    },\n    grow: {\n        flexGrow: 1\n    },\n    userInfo: {\n        marginRight: 10\n    },\n    role: {\n        fontSize: 12,\n        textAlign: \"right\",\n        fontWeight: \"bold\",\n        margin: \"4px 0 -2px 0\",\n        paddingTop: 3\n    },\n    email: {\n        fontSize: 12,\n        fontWeight: \"light\",\n        textAlign: \"right\",\n        margin: \"-2px 0 0 0\",\n        padding: 0\n    },\n    clickable: {\n        cursor: \"pointer\"\n    }\n});\n\nconst theme = new createMuiTheme({\n    palette: {\n        primary: {\n            main: themeColors.navBar\n        }\n    }\n});\n\n\nclass NavigationBar extends Component {\n\n    handleOnLogout = () => {\n        this.props.logout();\n    };\n\n    goToUpload = () => this.props.history.push(\"/upload\");\n\n    goToQuickSight = async () => {\n        let thisUrlEncoded = encodeURIComponent(\"https://\"+window.location.hostname);\n        let quicksightUrlEncoded = encodeURIComponent(`https://${region}.quicksight.aws.amazon.com/`);\n        AWS.config.region = region;\n\n        const auth = await apiService.getAuth()\n\n        let id_token = auth.idToken;\n        let cognitoParams = {\n            IdentityPoolId: process.env.REACT_APP_COGNITO_IDENTITY_POOL_ID,\n            Logins: {}\n        };\n\n        cognitoParams.Logins[`cognito-idp.${region}.amazonaws.com/${process.env.REACT_APP_COGNITO_USER_POOL_ID}`] = id_token;\n\n        AWS.config.credentials = new AWS.CognitoIdentityCredentials(cognitoParams);\n            \n        AWS.config.credentials.refresh(error => {\n            if (error) {\n                console.error(error);\n            } else {console.log(\"successful\") }\n        });\n\n        AWS.config.getCredentials(function () {\n            let creds = {\n                \"sessionId\":AWS.config.credentials.accessKeyId,\n                \"sessionKey\":AWS.config.credentials.secretAccessKey,\n                \"sessionToken\":AWS.config.credentials.sessionToken\n            }\n\n            let credsEncoded = encodeURIComponent(JSON.stringify(creds));\n\n            let uri = \"https://signin.aws.amazon.com/federation?Action=getSigninToken&SessionDuration=43200&Session=\"+credsEncoded;\n    \n            const options = {\n                method: 'POST',\n                headers: {\n                    Authorization : auth.accessToken,\n                },\n                redirect: 'follow', \n                referrerPolicy: 'no-referrer',\n                body: uri\n            }\n    \n            fetch(`${process.env.REACT_APP_BASE_API}/auth`, options)\n            .then(response => {\n                return response.json();\n            })\n            .then(data => {\n                let quickSightSSO = \"https://signin.aws.amazon.com/federation?Action=login&Issuer=\"+thisUrlEncoded+\"&Destination=\"+quicksightUrlEncoded+\"&SigninToken=\"+data.SigninToken\n            \n                console.log(\"AWS Console Sign In URL: \"+quickSightSSO);\n                window.location = quickSightSSO;\n            });\n        })    \n    }\n\n    goHome = () => this.props.history.push(\"/calls\")\n\n    render() {\n        let {classes} = this.props;\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <Grid container direction=\"row\" justify=\"space-between\" alignContent=\"center\"\n                                  alignItems=\"center\">\n                                <Grid item>\n                                    <Grid container direction=\"row\" alignItems=\"center\" alignContent=\"center\">\n\n                                        <Grid item onClick={this.goHome} className={classes.clickable}>\n                                            <Typography variant=\"h5\">\n                                                Call Analytics\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <Grid container direction=\"row\" alignItems=\"center\" alignContent=\"center\">\n                                        <Grid item onClick={this.goToQuickSight} className={classes.clickable}>\n                                            <img alt=\"Amazon QuickSight Logo\" className={classes.logo}\n                                                 src={process.env.PUBLIC_URL + '/images/quicksight.png'}/>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h5\">\n                                                QuickSight\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <Grid container direction=\"row\">\n                                        <Grid item className={classes.userInfo}>\n                                            <Grid container direction=\"column\" alignContent=\"center\"\n                                                  alignItems=\"flex-end\">\n                                                <Grid item><p className={classes.role}>{this.props.userRole}</p></Grid>\n                                                <Grid item><p className={classes.email}>{this.props.userEmail}</p>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item>\n                                            <Grid container direction=\"column\" alignItems={\"center\"} onClick={this.goToUpload} className={classes.clickable}>\n                                                <Grid item >\n                                                    <IconButton style={{ padding: 0, paddingLeft: 12, paddingRight: 12 }} color=\"inherit\">\n                                                        <CloudUploadIcon />\n                                                    </IconButton>\n                                                </Grid>\n                                                <Grid item><p className={classes.email}>Upload</p></Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item>\n                                            <Grid container direction=\"row\" alignItems={\"center\"}>\n                                                <Grid item>\n                                                    <IconButton color=\"inherit\" onClick={this.handleOnLogout}>\n                                                        <ExitToApp/>\n                                                    </IconButton>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Toolbar>\n                    </AppBar>\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nNavigationBar.propTypes = {\n    logout: PropTypes.func,\n    history: PropTypes.object,\n    token: PropTypes.string,\n    refreshToken: PropTypes.func,\n    updateToken: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n    let role = \"\";\n    if (!state.auth.user) {\n        return {\n            userEmail: null,\n            userRole: null\n        }\n    }\n\n    let roles = state.auth.user[\"roles\"] || [];\n    if (roles.includes(AuthRoles.MANAGER)) {\n        role = \"Manager\";\n    }\n\n    if (roles.includes(AuthRoles.ADMIN)) {\n        role = \"Administrator\"\n    }\n\n    if (!role) {\n        role = \"Agent\"\n    }\n\n    return {\n        userEmail: state.auth.user[\"email\"],\n        userRole: role\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => dispatch(AuthAction.logout()),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(NavigationBar))","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport PlayArrowIcon from '@material-ui/icons/PlayCircleFilled'\nimport PauseIcon from '@material-ui/icons/PauseCircleFilled'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied'\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied'\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied'\nimport Chip from '@material-ui/core/Chip'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  chips: {\n    marginRight: 5\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}));\n\nfunction TranscriptLine(props) {\n  const classes = props.classes\n  if (!props.turn) return null\n  return (\n    <Grid container item xs={12}>\n      <Grid item xs={10}>\n        <Grid item xs={10}>\n          {Emoji[props.turn.sentiment.Sentiment]}\n          <Typography style={{ fontWeight: 'bold' }} className={classes.heading} component=\"span\">{props.turn.speaker === AGENT ? 'Agent ' : 'Customer '}</Typography>\n          <Typography style={{ color: '#4186b2' }} className={classes.secondaryHeading} component=\"span\">\n            {props.turn.start_time}\n          </Typography>\n        </Grid>\n        <Grid item xs={10}>{props.turn.text}</Grid>\n      </Grid>\n    </Grid>)\n}\n\nconst Emoji = {\n  'NEGATIVE': <SentimentVeryDissatisfiedIcon style={{ color: \"#ff9495\" }} />,\n  'POSITIVE': <SentimentVerySatisfiedIcon style={{ color: \"#6cd3aa\" }} />,\n  'NEUTRAL': <SentimentSatisfiedIcon style={{ color: \"#d5d5d5\" }} />\n}\n\nconst AGENT = 'AGENT'\nconst CUSTOMER = 'CUSTOMER'\n\nconst getSpeaker = (turn) => turn.hasOwnProperty('channel') ? turn.channel : turn.speaker_label\n\nfunction getTranscriptTurns(transcript) {\n  const agentOrder = parseInt(transcript.sentiment.turns.numChannels === 2 ? transcript.labels.agentChannel : transcript.labels.agentLabel)\n  console.log(agentOrder)\n  const customerOrder = agentOrder === 0 ? 1 : 0\n\n  transcript.sentiment.turns.filter(t => getSpeaker(t) === customerOrder).map( t => t.speaker =  CUSTOMER)\n  transcript.sentiment.turns.filter(t => getSpeaker(t) === agentOrder).map( t => t.speaker =  AGENT)\n  \n  console.log(transcript.sentiment.turns)\n  \n  return transcript.sentiment.turns\n}\n\nconst getCategories = (sentiment) => ([\n  (sentiment || {}).call_motivation_status,\n  (sentiment || {}).call_resolution_status\n])\n\nexport default function CallCard(props) {\n  const classes = useStyles();\n  const playing = props.playing && props.transcript.audioURI === props.currentKey\n  const [callMotivation, callResolution] = getCategories(props.currentSentiment)\n  const expanded = (props.showing && props.currentKey === props.transcript.fullTranscriptURI) || (props.showing && props.currentKey === props.transcript.audioURI)\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded}\n        onClick={(e) => props.toggleTranscript(e, props.transcript.fullTranscriptURI, props.transcript.analysisURI)}\n        onFocus={event => event.stopPropagation()}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\" >\n          <div className={classes.column}>\n            <Typography className={classes.heading}>Contact Summary</Typography>\n            <Typography className={classes.secondaryHeading}>Uploaded: {props.transcript.user}</Typography>\n            <Typography className={classes.secondaryHeading}>Last Modified: {props.transcript.lastModified}</Typography>\n          </div>\n          <div className={classes.column} style={{ margin: 'auto 0' }}>\n            <IconButton aria-label=\"play/pause\" onClick={(e) => props.togglePlay(e, props.transcript.audioURI)} onFocus={event => event.stopPropagation()}>\n              {!playing && <PlayArrowIcon className={classes.playIcon} />}\n              {playing && <PauseIcon className={classes.playIcon} />}\n            </IconButton>\n            <Typography className={classes.secondaryHeading}>{props.transcript.transcriptionJobName}</Typography>\n          </div>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelDetails className={classes.details}>\n          {props.currentSentiment && expanded\n          ? <div className={classes.root}>\n              <Grid container spacing={1}>\n                <Grid item xs={12} style={{ paddingBottom: '.5em' }}>\n                  <Typography style={{ fontWeight: 'bold' }} className={classes.secondaryHeading} component=\"span\">Categories</Typography>\n                </Grid>\n                <Grid container item xs={12} style={{ paddingBottom: '.5em' }} >\n                    {callMotivation && <Chip className={classes.chips} label={callMotivation} color=\"primary\" />}\n                    {callResolution && <Chip className={classes.chips} label={callResolution} color=\"primary\" />}\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography style={{ fontWeight: 'bold' }} className={classes.secondaryHeading} component=\"span\">Transcript</Typography>\n                </Grid>\n                {getTranscriptTurns({ labels: props.transcript.labels, sentiment: props.currentSentiment }).map((turn, i) => (\n                  <TranscriptLine\n                    key={\"transcript-line-\" + i}\n                    turn={turn} classes={classes}\n                  />\n                ))}\n              </Grid>\n            </div>\n          : <CircularProgress/>}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AuthAction } from \"../store/actions/auth.actions\";\nimport { TranscriptsAction } from \"../store/actions/transcripts.actions\";\nimport { SentimentAction } from \"../store/actions/sentiment.action\";\nimport requiresAuth from \"../common/requiresAuth\";\nimport NavigationBar from \"../navigation/NavigationBar\";\nimport {\n  List,\n  ListItem,\n  Button,\n  CircularProgress,\n  Typography,\n  withStyles,\n  Grid\n} from \"@material-ui/core\";\nimport CallCard from \"./CallCard\";\n\nimport { ApiService } from \"../service/api.service\";\nconst apiService = new ApiService();\n\nconst styles = theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    padding: theme.spacing(1, 2)\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(20),\n    color: theme.palette.text.secondary\n  }\n});\n\nconst initialState = {\n  playing: false,\n  showing: false,\n  currentAudio: null,\n  currentKey: null\n};\n\nclass Calls extends Component {\n  baseUrl = process.env.REACT_APP_BASE_API;\n  constructor(props) {\n    super(props);\n    this.state = { ...initialState };\n    this.togglePlay = this.togglePlay.bind(this);\n    this.toggleTranscript = this.toggleTranscript.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getTranscripts();\n  }\n\n  togglePlay(event, uri) {\n    event.stopPropagation();\n    if (this.state.playing) this.setState({ ...this.state, playing: false });\n    else\n      apiService\n        .getAuth()\n        .then(token => {\n          const options = {\n            method: \"GET\",\n            headers: {\n              Authorization: `${token.accessToken}`\n            },\n            redirect: \"follow\" // manual, *follow, error\n          };\n          return fetch(\n            `${this.baseUrl}/api/audio?uri=${encodeURIComponent(uri)}`,\n            options\n          );\n        })\n        .then(response => response.json())\n        .then(response =>\n          this.setState({\n            playing: true,\n            currentAudio: response.uri,\n            currentKey: uri\n          })\n        );\n  }\n\n  toggleTranscript(event, transcriptUri, sentimentUri) {\n    event.stopPropagation();\n\n    if (this.state.showing) {\n      this.setState({ ...this.state, currentKey: null, showing: false });\n    } else {\n      this.props.getSentiment(sentimentUri);\n      this.setState({\n        showing: true,\n        currentKey: transcriptUri\n      });\n    }\n  }\n\n  nextPage() {\n    if (this.props.transcript.lastEvaluatedKey) {\n      this.props.getTranscripts(this.props.transcript.lastEvaluatedKey);\n    }\n  }\n\n  render() {\n    let { classes } = this.props;\n    if (this.props.transcripts.loading) {\n      return <CircularProgress />;\n    }\n    if (\n      !this.props.transcripts.loading &&\n      Object.keys(this.props.transcripts.data).length === 0\n    ) {\n      return (\n        <div>\n          <NavigationBar history={this.props.history} />\n          <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n            <div>\n              <Typography className={classes.heading}>\n                Welcome to the Intelligent Contact Center Post Call Analytics.\n              </Typography>\n              <Typography className={classes.heading}>\n                Please upload some calls using the Upload button in the top\n                right corner of the Navigation Bar.\n              </Typography>\n              <Typography className={classes.heading}>\n                If you just uploaded, Please Refresh this page in a few minutes\n                to view calls.\n              </Typography>\n            </div>\n          </Grid>\n        </div>\n      );\n    }\n    if (\n      !this.props.transcripts.loading &&\n      Object.keys(this.props.transcripts.data).length !== 0\n    ) {\n      return (\n        <div>\n          <NavigationBar history={this.props.history} />\n          <h1>Calls</h1>\n          <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            style={{ width: \"100%\" }}\n          >\n            {this.props.transcripts.data.map(transcript => (\n              <ListItem key={transcript.audioURI} button={false}>\n                <CallCard\n                  transcript={{\n                    ...transcript,\n                    labels: this.props.transcripts.labels\n                  }}\n                  currentSentiment={this.props.sentiment.data}\n                  {...this.state}\n                  togglePlay={this.togglePlay}\n                  toggleTranscript={this.toggleTranscript}\n                />\n              </ListItem>\n            ))}\n          </List>\n          {this.state.playing && (\n            <audio src={this.state.currentAudio} autoPlay></audio>\n          )}\n          <Button\n            style={{ marginLeft: 16 }}\n            variant=\"contained\"\n            disabled={this.props.transcripts.lastEvaluatedKey === null}\n            onClick={this.nextPage}\n          >\n            Next Page\n          </Button>\n        </div>\n      );\n    }\n  }\n}\n\nCalls.propTypes = {\n  logout: PropTypes.func,\n  showGlobalSettingsModal: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  return {\n    transcripts: state.transcripts,\n    sentiment: state.sentiment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(AuthAction.logout()),\n    getTranscripts: lastEvaluatedKey =>\n      dispatch(TranscriptsAction.getTranscripts(lastEvaluatedKey)),\n    getSentiment: uri => dispatch(SentimentAction.getSentiment(uri))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(requiresAuth(Calls)));\n","const styles = (theme) => ({\n    '@global': {\n        body: {\n            ...theme.typography.body1,\n            margin: 0\n        },\n        h6: {\n            color: theme.palette.primary.main,\n            fontWeight: \"normal\"\n        }\n    }\n});\n\nexport default styles;","import * as React from \"react\"\nimport { CardContent, Typography, CardActions, Button, Paper, Card, makeStyles, Container, Grid, Chip, Avatar, CircularProgress } from \"@material-ui/core\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport SaveIcon from '@material-ui/icons/Save'\nimport Dropzone, { DropEvent } from 'react-dropzone'\nimport { v4 } from 'uuid'\nimport {ApiService} from \"../service/api.service\"\nimport AuthDto from \"../dto/auth.dto\"\nimport NavigationBar from \"../navigation/NavigationBar\"\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {withStyles} from \"@material-ui/core\"\nimport requiresAuth from \"../common/requiresAuth\"\n\nconst apiService = new ApiService()\n\nconst styles = () => ({\n})\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  paper: {\n    padding: 2,\n    textAlign: 'center',\n  }\n})\n\ninterface FileWithPath extends File {\n  path: string;\n}\n\ntype Upload = {\n  history: any;\n  token: any;\n  refreshToken: () => Promise<any>;\n  updateToken: (token: any) => void;\n}\n\ntype FileData = {\n  data: string | ArrayBuffer | null;\n  contentType: string;\n  name: string;\n  lastModified: string;\n}\n\ntype UploadState = {\n  status: string | null;\n  files: FileWithPath[];\n}\n\ntype UploadAction = {\n  type: string;\n  payload?: any;\n}\n\ntype UploadCases = {\n  [a: string]: (b: UploadState, c: any) => UploadState\n}\n\nexport const readFile = async (file: File): Promise<FileData> => new Promise((res, rej) => {\n  const reader = new FileReader()\n  reader.onabort = () => rej('File read aborted')\n  reader.onerror = (e) => rej(e)\n  reader.onloadend = () => res({\n    data: reader.result,\n    contentType: file.type,\n    name: file.name.replace(/ /g,\"_\"),\n    lastModified: moment.utc(new Date(file.lastModified)).toISOString()\n  })\n  reader.readAsArrayBuffer(file)\n})\n\nconst Upload = (props: Upload) => {\n  const FILE_DROPPED = 'FILE_DROPPED'\n  const FILE_REMOVED = 'FILE_REMOVED'\n  const CLEAR_FILES = 'CLEAR_FILES'\n  const PENDING = 'PENDING'\n  const SUCCESS = 'SUCCESS'\n  const FAIL = 'FAIL'\n\n  const initialState: UploadState = {\n    status: null,\n    files: []\n  }\n  const classes = useStyles()\n\n  const cases: UploadCases = {\n    [FILE_DROPPED]: (state: UploadState, payload): UploadState => ({\n      status: null,\n      files: state.files.concat(payload)\n    }),\n    [FILE_REMOVED]: (state: UploadState, payload): UploadState => ({\n      status: null,\n      files: state.files.filter(f => f.path !== payload)\n    }),\n    [CLEAR_FILES]: (): UploadState => initialState,\n    [PENDING]: (state: UploadState) => ({\n      ...state,\n      status: PENDING,\n    }),\n    [SUCCESS]: (): UploadState => ({\n      ...initialState,\n      status: SUCCESS\n    }),\n    [FAIL]: (state: UploadState): UploadState => ({\n      ...state,\n      status: FAIL\n    })\n  }\n\n  const reducer = (state: UploadState, action: UploadAction): UploadState => cases[action.type] ? cases[action.type](state, action.payload) : state\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  const filesDropped = (accepted: File[], rejected: File[], event: DropEvent) => dispatch({\n    type: FILE_DROPPED,\n    payload: accepted\n  })\n  const removeFile = (path: string) => dispatch({ type: FILE_REMOVED, payload: path })\n  const clearFiles = () => dispatch({ type: CLEAR_FILES })\n  console.log(`Stage: ${process.env.STAGE}`)\n\n  const getToken = async (): Promise<AuthDto> => {\n    const token = await apiService.getAuth()\n    if (!token) throw Error('No token found')\n    return token\n  }\n\n  const authenticatedUpload = async () => {\n    const files: FileData[] = await Promise.all(state.files.map((file: File) => readFile(file)))\n    if (!files) throw Error('No files to upload')\n    let token = await getToken()\n    const response = await fetch(`${process.env.REACT_APP_BASE_API}/api/presigned`, {\n      method: 'POST',\n      headers: {\n        Authorization: `${token.accessToken}`\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify({\n        files: files.map(file => ({ name: file.name.replace(/ /g,\"_\"), type: file.contentType , lastModified: file.lastModified, jobId: v4() }))\n      })\n    })\n    if (!response.ok) throw Error(response.statusText)\n\n    const body = await response.json()\n    console.log(body)\n\n    token = await getToken()\n    // update status in dynamodb\n    await fetch(`${process.env.REACT_APP_BASE_API}/api/status`, {\n      method: 'POST',\n      headers: {\n        Authorization: `${token.accessToken}`\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify({\n        uris: body.map((s: any) => ({\n          uri: `s3://${s.Bucket}/${s.Key}`,\n          lastModified: s.lastModified,\n          jobId: s.jobId\n        }))\n      })\n    })\n\n    // use array of presigned urls to upload\n    const s3Response: Response[] = await Promise.all(body.map((response: any) => {\n      const file = files.find(file => file.name.replace(/ /g,\"_\") === response.name)\n      if (!file) throw Error('No file found for name ' + response.name)\n      return fetch(response.url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': file.contentType\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *client\n        body: file.data\n      })\n    }))\n    console.log(s3Response)\n\n  }\n\n  const upload = () => {\n    dispatch({ type: PENDING })\n\n    authenticatedUpload()\n    .then(() => {\n      dispatch({ type: SUCCESS })\n    })\n    .catch(e => {\n      console.log(e)\n      dispatch({ type: FAIL })\n    })\n  }\n\n  return (\n    <div>\n      <NavigationBar { ...props } />\n      <Paper>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom className={classes.title}>\n              Upload Files\n            </Typography>\n            <Grid\n              container\n              spacing={3}>\n              <Grid item xs={12}>\n                  <Paper variant=\"outlined\" className={classes.paper}>\n                    <Dropzone onDrop={filesDropped}>\n                      {({getRootProps, getInputProps}) =>\n                        <div style={{height: '30vh'}} {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <Typography className={classes.title} >\n                            Drag and drop files here\n                          </Typography>\n                        </div>}\n                    </Dropzone>\n                  </Paper>\n              </Grid>\n            </Grid>\n            <Container>\n              {state.files.map(f => <Chip\n                key={f.path}\n                avatar={<Avatar alt=\"File\"><SaveIcon /></Avatar>}\n                label={f.path}\n                onDelete={() => removeFile(f.path)}\n              />)}\n            </Container>\n          </CardContent>\n          <CardActions>\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              size=\"small\"\n              onClick={clearFiles}>\n                Clear\n            </Button>\n            <Button\n              disabled={state.status === PENDING}\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<CloudUploadIcon/>}\n              onClick={upload}>\n              Upload\n            </Button>\n            {state.status === FAIL && <Typography color=\"textSecondary\">Upload Failed. Try Logging In.</Typography>}\n            {state.status === PENDING && <CircularProgress />}\n            {state.status === SUCCESS && <Typography color=\"textSecondary\">Upload Successful</Typography>}\n          </CardActions>\n        </Card>\n      </Paper>\n    </div>)\n}\n\nconst mapStateToProps = () => {\n  return {}\n}\n\nconst mapDispatchToProps = () => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(requiresAuth(Upload)))\n","import React, {Component} from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect,\n    Router\n} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core\";\nimport Amplify from 'aws-amplify';\n\nimport history from \"./history\";\nimport CognitoAuth from './auth/CognitoAuth';\nimport Calls from \"./calls/Calls\";\nimport globalStyles from './theme/global.styles';\nimport Upload from './upload/Upload';\n\nAmplify.configure({\n    Auth: {\n        region: process.env.REACT_APP_REGION,\n        userPoolId: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n        userPoolWebClientId: process.env.REACT_APP_COGNITO_CLIENT_ID,\n        oauth: {\n            domain: process.env.REACT_APP_COGNITO_DOMAIN,\n            scope: ['profile', 'openid'],\n            redirectSignIn: process.env.REACT_APP_COGNITO_REDIRECT,\n            redirectSignOut: process.env.REACT_APP_COGNITO_REDIRECT,\n            responseType: 'code'\n        }\n    }\n});\n\nclass App extends Component {\n    render() {\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route exact path=\"/login\" component={CognitoAuth}/>\n                    <Route path=\"/calls\" component={Calls}/>\n                    <Route exact path=\"/\" component={CognitoAuth}/>\n                    <Route path=\"/upload\" component={Upload} />\n                    <Redirect from=\"/*\" exact to=\"/calls\" />\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default withStyles(globalStyles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from './store/reducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport materialTheme from \"./theme/material.theme\";\n\nimport logger from \"./common/logger\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any\n    }\n}\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider theme={materialTheme}>\n            <App/>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}